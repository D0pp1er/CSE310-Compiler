start : program 	<Line: 2-38>
 program : unit 	<Line: 2-38>
  unit : func_definition 	<Line: 2-38>
   func_definition : type_specifier ID LPAREN RPAREN compound_statement 	<Line: 2-38>
    type_specifier : INT 	<Line: 2-2>
     INT : int	<Line: 2>
    ID : main	<Line: 2>
    LPAREN : (	<Line: 2>
    RPAREN : )	<Line: 2>
    compound_statement : LCURL statements RCURL 	<Line: 2-38>
     LCURL : {	<Line: 2>
     statements : statements statement 	<Line: 4-13>
      statements : statement 	<Line: 4-4>
       statement : var_declaration 	<Line: 4-4>
        var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 4-4>
         type_specifier : INT 	<Line: 4-4>
          INT : int	<Line: 4>
         declaration_list : declaration_list COMMA ID 	<Line: 4-4>
          declaration_list : declaration_list COMMA ID 	<Line: 4-4>
           declaration_list : declaration_list COMMA ID 	<Line: 4-4>
            declaration_list : declaration_list COMMA ID 	<Line: 4-4>
             declaration_list : declaration_list COMMA ID 	<Line: 4-4>
              declaration_list : ID 	<Line: 4-4>
               ID : k	<Line: 4>
              COMMA : ,	<Line: 4>
              ID : ll	<Line: 4>
             COMMA : ,	<Line: 4>
             ID : m	<Line: 4>
            COMMA : ,	<Line: 4>
            ID : n	<Line: 4>
           COMMA : ,	<Line: 4>
           ID : o	<Line: 4>
          COMMA : ,	<Line: 4>
          ID : p	<Line: 4>
         SEMICOLON : ;	<Line: 4>
      statement : expression_statement 	<Line: 13-13>
       expression_statement : expression SEMICOLON 	<Line: 13-13>
        expression : variable ASSIGNOP logic_expression 	<Line: 13-13>
         variable : ID 	<Line: 13-13>
          ID : m	<Line: 13>
         ASSIGNOP : =	<Line: 13>
         logic_expression : rel_expression 	<Line: 13-13>
          rel_expression : simple_expression 	<Line: 13-13>
           simple_expression : term 	<Line: 13-13>
            term : term MULOP unary_expression 	<Line: 13-13>
             term : unary_expression 	<Line: 13-13>
              unary_expression : factor 	<Line: 13-13>
               factor : variable 	<Line: 13-13>
                variable : ID 	<Line: 13-13>
                 ID : k	<Line: 13>
             MULOP : %	<Line: 13>
             unary_expression : factor 	<Line: 13-13>
              factor : CONST_INT 	<Line: 13-13>
               CONST_INT : 9	<Line: 13>
        SEMICOLON : ;	<Line: 13>
     RCURL : }	<Line: 38>
