start : program 	<Line: 1-9>
 program : program unit 	<Line: 1-9>
  program : program unit 	<Line: 1-8>
   program : program unit 	<Line: 1-7>
    program : program unit 	<Line: 1-5>
     program : program unit 	<Line: 1-4>
      program : program unit 	<Line: 1-3>
       program : program unit 	<Line: 1-2>
        program : unit 	<Line: 1-1>
         unit : var_declaration 	<Line: 1-1>
          var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 1-1>
           type_specifier : INT 	<Line: 1-1>
            INT : int	<Line: 1>
           declaration_list : ID 	<Line: 1-1>
            ID : a	<Line: 1>
           SEMICOLON : ;	<Line: 1>
        unit : var_declaration 	<Line: 2-2>
         var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 2-2>
          type_specifier : INT 	<Line: 2-2>
           INT : int	<Line: 2>
          declaration_list : declaration_list COMMA ID 	<Line: 2-2>
           declaration_list : ID 	<Line: 2-2>
            ID : b	<Line: 2>
           COMMA : ,	<Line: 2>
           ID : c	<Line: 2>
          SEMICOLON : ;	<Line: 2>
       unit : var_declaration 	<Line: 3-3>
        var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 3-3>
         type_specifier : FLOAT 	<Line: 3-3>
          FLOAT : float	<Line: 3>
         declaration_list : ID 	<Line: 3-3>
          ID : dedffd	<Line: 3>
         SEMICOLON : ;	<Line: 3>
      unit : var_declaration 	<Line: 4-4>
       var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 4-4>
        type_specifier : VOID 	<Line: 4-4>
         VOID : void	<Line: 4>
        declaration_list : ID 	<Line: 4-4>
         ID : def	<Line: 4>
        SEMICOLON : ;	<Line: 4>
     unit : func_declaration 	<Line: 5-5>
      func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON 	<Line: 5-5>
       type_specifier : VOID 	<Line: 5-5>
        VOID : void	<Line: 5>
       ID : kutta	<Line: 5>
       LPAREN : (	<Line: 5>
       parameter_list : type_specifier ID 	<Line: 5-5>
        type_specifier : INT 	<Line: 5-5>
         INT : int	<Line: 5>
        ID : c	<Line: 5>
       RPAREN : )	<Line: 5>
       SEMICOLON : ;	<Line: 5>
    unit : func_declaration 	<Line: 7-7>
     func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON 	<Line: 7-7>
      type_specifier : FLOAT 	<Line: 7-7>
       FLOAT : float	<Line: 7>
      ID : shala	<Line: 7>
      LPAREN : (	<Line: 7>
      parameter_list : type_specifier 	<Line: 7-7>
       type_specifier : FLOAT 	<Line: 7-7>
        FLOAT : float	<Line: 7>
      RPAREN : )	<Line: 7>
      SEMICOLON : ;	<Line: 7>
   unit : func_definition 	<Line: 8-8>
    func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement 	<Line: 8-8>
     type_specifier : FLOAT 	<Line: 8-8>
      FLOAT : float	<Line: 8>
     ID : shala	<Line: 8>
     LPAREN : (	<Line: 8>
     parameter_list : type_specifier ID 	<Line: 8-8>
      type_specifier : INT 	<Line: 8-8>
       INT : int	<Line: 8>
      ID : c	<Line: 8>
     RPAREN : )	<Line: 8>
     compound_statement : LCURL RCURL 	<Line: 8-8>
      LCURL : {	<Line: 8>
      RCURL : }	<Line: 8>
  unit : func_definition 	<Line: 9-9>
   func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement 	<Line: 9-9>
    type_specifier : INT 	<Line: 9-9>
     INT : int	<Line: 9>
    ID : kutta	<Line: 9>
    LPAREN : (	<Line: 9>
    parameter_list : type_specifier ID 	<Line: 9-9>
     type_specifier : INT 	<Line: 9-9>
      INT : int	<Line: 9>
     ID : c	<Line: 9>
    RPAREN : )	<Line: 9>
    compound_statement : LCURL RCURL 	<Line: 9-9>
     LCURL : {	<Line: 9>
     RCURL : }	<Line: 9>
